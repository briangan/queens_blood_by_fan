:ruby
  # Required locals:
  #   game <Game>
%div(id="board_notice" class="text-center" role="alert")
  &nbsp;
.board-wrapper
  - player_user_ids = [nil] + game.players.collect(&:id)
  %table(id="board_table" class="board-table")
    %tbody
      - 1.upto(game.board.rows) do |row|
        - board_tile_index = row
        %tr(class="board-row")
          - 1.upto(game.board.columns) do |col|
            - board_tile_index += 1
            - board_tile = game.find_tile(col, row)
            - player_number = nil
            - if board_tile.claiming_user_id 
              - player_number = player_user_ids.index(board_tile.claiming_user_id)
            %td(id="game_boad_tile_#{board_tile&.id}" class="board-tile #{board_tile_index % 2 == 1 ? 'board-tile-odd' : 'board-tile-even'} droppable" id="board_tile_#{col}_#{row}" data-tile-position="#{col},#{row}" data-game-board-tile-id="#{board_tile.id}" data-player="#{player_number}" data-claiming-user-id="#{board_tile.claiming_user_id}" data-pawn-value="#{board_tile.pawn_value}")
              .card-wrapper(title="#{col},#{row} w/ #{board_tile.pawn_value} pawns by Player #{board_tile.claiming_user_id}" data-bs-toggle="tooltip" data-bs-placement="top" style="#{'padding-top: 0 !important;' if board_tile.current_card_id && board_tile.current_card}")
                - if board_tile.current_card_id && board_tile.current_card
                  = render 'cards/card', card: board_tile.current_card, which_player: player_number, card_css_class: "card"
              .pawn-icon-wrapper(data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="For cards w/ up to #{board_tile.pawn_value} pawn rank")
                - if board_tile.claiming_user_id && board_tile.pawn_value.to_i > 0
                  - board_tile.pawn_value.to_i.times do
                    %i(class="bi bi-cone pawn-icon user-#{player_number}-color")
                %i.bi.bi-slash-circle.disabled-icon.d-none